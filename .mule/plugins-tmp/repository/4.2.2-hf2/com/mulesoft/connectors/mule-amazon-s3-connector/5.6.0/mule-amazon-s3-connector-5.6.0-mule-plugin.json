{
  "minMuleVersion": "4.1.1",
  "extensionModel": {
    "types": [
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.attributes.AccessControlListAttributes",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.attributes.AccessControlListAttributes",
          "typeAlias": {"value": "AccessControlListAttributes"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "ownerDisplayName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "ownerId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.attributes.S3ObjectAttributes",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.attributes.S3ObjectAttributes",
          "typeAlias": {"value": "S3ObjectAttributes"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "bucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "cacheControl"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "contentDisposition"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "contentEncoding"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "contentLanguage"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "contentLength"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "contentMD5"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "contentType"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "etag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "expirationTime"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "expirationTimeRuleId"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "httpExpiresDate"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "key"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "lastModified"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "ongoingRestore"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "redirectLocation"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "replicationStatus"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "requesterCharged"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "restoreExpirationTime"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "sseAlgorithm"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "sseAwsKmsKeyId"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "sseCustomerAlgorithm"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "sseCustomerKeyMd5"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "typeId": "org.mule.extension.s3.api.model.StorageClass",
                "enum": {
                  "values": [
                    "STANDARD",
                    "STANDARD_IA",
                    "INTELLIGENT_TIERING",
                    "ONEZONE_IA",
                    "REDUCED_REDUNDANCY",
                    "GLACIER"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "storageClass"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.util.Map",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "java.lang.String",
                  "java.lang.String"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": true
              }},
              "type": "Object",
              "fields": [],
              "open": {"type": "String"}
            },
            "key": {"name": "userMetadata"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "versionId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.group.ObjectMetadataParameterGroup",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.group.ObjectMetadataParameterGroup",
          "typeAlias": {"value": "ObjectMetadataParameterGroup"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.util.Map",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "java.lang.String",
                  "java.lang.String"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": true
              }},
              "type": "Object",
              "fields": [],
              "open": {"type": "String"}
            },
            "key": {"name": "userMetadata"}
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "lastModified"}
          },
          {
            "annotations": {
              "default": "0",
              "display": {"displayModel": {
                "summary": "The Content-Length HTTP header indicating the size of the associated object in bytes.",
                "example": "3495"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "contentLength"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The Content-Type HTTP header indicating the type of content stored in the associated object.",
                "example": "text/html; charset=ISO-8859-4"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "contentType"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The Content-Language HTTP header which describes the natural language(s) of the intended audience for the enclosed entity.",
                "example": "en"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "contentLanguage"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The optional Content-Encoding HTTP header specifying what content encodings have been applied to the object and what decoding mechanisms must be applied in order to obtain the media-type referenced by the Content-Type field.",
                "example": "gzip"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "contentEncoding"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The optional Cache-Control HTTP header which allows the user to specify caching behavior along the HTTP request/reply chain.",
                "example": "public, max-age=31536000"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "cacheControl"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The base64 encoded 128-bit MD5 digest of the associated object (content - not including headers) according to RFC 1864.",
                "example": "md5-digest"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "contentMD5"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The optional Content-Disposition HTTP header, which specifies presentational information such as the recommended filename for the object to be saved as.",
                "example": "attachment"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "contentDisposition"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The entity tag is a hash of the object.",
                "example": "xyzzy"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "etag"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The version ID of the associated Amazon S3 object if available.",
                "example": "111111"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "versionId"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Specifies the server-side encryption algorithm to use when Amazon S3 creates an object.",
                "example": "aws:kms"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "sseAlgorithm"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Specifies the algorithm to use to when encrypting the object.",
                "example": "AES256"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "sseCustomerAlgorithm"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Specifies the base64-encoded 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
                "example": "base64-encoded_128-bit_MD5_digest_of_the_encryption_key"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "sseCustomerKeyMd5"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "The expiration time for the object."}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "expirationTime"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The rule ID of object's expiration configuration.",
                "example": "This_is_expiration_time_rule_id"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "expirationTimeRuleId"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "The new restore expiration time for the object."}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "restoreExpirationTime"}
          },
          {
            "annotations": {
              "default": "false",
              "display": {"displayModel": {
                "summary": "Sets the boolean value which indicates whether there is ongoing restore request.",
                "example": "false"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "ongoingRestore"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "Set the date when the object is no longer cacheable."}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "httpExpiresDate"}
          },
          {
            "annotations": {
              "default": "STANDARD",
              "display": {"displayModel": {"summary": "The storage class of the object."}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "typeId": "org.mule.extension.s3.api.model.StorageClass",
                "enum": {
                  "values": [
                    "STANDARD",
                    "STANDARD_IA",
                    "INTELLIGENT_TIERING",
                    "ONEZONE_IA",
                    "REDUCED_REDUNDANCY",
                    "GLACIER"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "storageClass"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "the AWS Key Management System key id used for Server Side Encryption of the Amazon S3 object.",
                "example": "testkey"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "sseAwsKmsKeyId"}
          },
          {
            "annotations": {
              "default": "false",
              "display": {"displayModel": {
                "summary": "If a bucket is enabled for Requester Pays, then any attempt of operation from it without Requester Pays enabled will result in a 403 error and the bucket owner will be charged for the request. Enabling Requester Pays disables the ability to have anonymous access to bucket.",
                "example": "false"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "requesterCharged"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "The replication status of the object if it is from a bucket that is the source or destination in a cross-region replication.",
                "example": "COMPLETED"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "replicationStatus"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.BLCRule",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.BLCRule",
          "typeAlias": {"value": "BLCRule"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "expirationDate"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "expirationInDays"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "id"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "noncurrentVersionExpirationInDays"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.NoncurrentVersionTransition",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.NoncurrentVersionTransition",
                "typeAlias": {"value": "NoncurrentVersionTransition"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "days"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.StorageClass",
                      "enum": {
                        "values": [
                          "STANDARD",
                          "STANDARD_IA",
                          "INTELLIGENT_TIERING",
                          "ONEZONE_IA",
                          "REDUCED_REDUNDANCY",
                          "GLACIER"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "storageClass"}
                }
              ]
            },
            "key": {"name": "noncurrentVersionTransition"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "prefix"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "status"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Transition",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Transition",
                "typeAlias": {"value": "Transition"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "key": {"name": "date"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "days"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.StorageClass",
                      "enum": {
                        "values": [
                          "STANDARD",
                          "STANDARD_IA",
                          "INTELLIGENT_TIERING",
                          "ONEZONE_IA",
                          "REDUCED_REDUNDANCY",
                          "GLACIER"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "storageClass"}
                }
              ]
            },
            "key": {"name": "transition"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.Bucket",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.Bucket",
          "typeAlias": {"value": "Bucket"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "creationDate"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "name"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Owner",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Owner",
                "typeAlias": {"value": "Owner"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "displayName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "id"}
                }
              ]
            },
            "key": {"name": "owner"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.BucketLoggingConfiguration",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.BucketLoggingConfiguration",
          "typeAlias": {"value": "BucketLoggingConfiguration"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "destinationBucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "logFilePrefix"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.BucketWebsiteConfiguration",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.BucketWebsiteConfiguration",
          "typeAlias": {"value": "BucketWebsiteConfiguration"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "errorDocument"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "indexDocumentSuffix"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.RedirectRule",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.RedirectRule",
                "typeAlias": {"value": "RedirectRule"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "hostName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "httpRedirectCode"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "protocol"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "replaceKeyPrefixWith"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "replaceKeyWith"}
                }
              ]
            },
            "key": {"name": "redirectAllRequestsTo"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "org.mule.extension.s3.api.model.RoutingRule",
                    "hasDefaultConstructor": true,
                    "isInstantiable": true,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "org.mule.extension.s3.api.model.RoutingRule",
                  "typeAlias": {"value": "RoutingRule"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.io.Serializable"],
                          "parent": "",
                          "classname": "org.mule.extension.s3.api.model.RoutingRuleCondition",
                          "hasDefaultConstructor": true,
                          "isInstantiable": true,
                          "isFinal": false,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "org.mule.extension.s3.api.model.RoutingRuleCondition",
                        "typeAlias": {"value": "RoutingRuleCondition"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "httpErrorCodeReturnedEquals"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "keyPrefixEquals"}
                        }
                      ]
                    },
                    "key": {"name": "condition"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.io.Serializable"],
                          "parent": "",
                          "classname": "org.mule.extension.s3.api.model.RedirectRule",
                          "hasDefaultConstructor": true,
                          "isInstantiable": true,
                          "isFinal": false,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "org.mule.extension.s3.api.model.RedirectRule",
                        "typeAlias": {"value": "RedirectRule"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "hostName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "httpRedirectCode"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "protocol"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "replaceKeyPrefixWith"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "replaceKeyWith"}
                        }
                      ]
                    },
                    "key": {"name": "redirect"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.RoutingRule"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "routingRules"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.CORSRule",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.CORSRule",
          "typeAlias": {"value": "CORSRule"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {"type": "String"},
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.lang.String"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "allowedHeaders"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {
                "annotations": {
                  "typeId": "org.mule.extension.s3.api.model.AllowedMethods",
                  "enum": {
                    "values": [
                      "GET",
                      "PUT",
                      "HEAD",
                      "POST",
                      "DELETE"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.AllowedMethods"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "allowedMethods"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {"type": "String"},
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.lang.String"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "allowedOrigins"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {"type": "String"},
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.lang.String"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "exposedHeaders"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "id"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxAgeSeconds"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.CompleteMultipartUploadResult",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.CompleteMultipartUploadResult",
          "typeAlias": {"value": "CompleteMultipartUploadResult"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "bucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "eTag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "expirationTime"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "expirationTimeRuleId"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "key"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "location"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "versionId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.CopyPartResult",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.CopyPartResult",
          "typeAlias": {"value": "CopyPartResult"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "etag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "lastModifiedDate"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "partNumber"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "versionId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.Grant",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.Grant",
          "typeAlias": {"value": "Grant"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Grantee",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Grantee",
                "typeAlias": {"value": "Grantee"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "displayName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.GroupUri",
                      "enum": {
                        "values": [
                          "AllUsers",
                          "AuthenticatedUsers",
                          "LogDelivery"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "groupUri"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "identifier"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.GranteeType",
                      "enum": {
                        "values": [
                          "ID",
                          "EMAIL_ADDRESS",
                          "URI"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "typeIdentifier"}
                }
              ]
            },
            "key": {"name": "grantee"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "typeId": "org.mule.extension.s3.api.model.Permission",
                "enum": {
                  "values": [
                    "FULL_CONTROL",
                    "READ",
                    "WRITE",
                    "READ_ACP",
                    "WRITE_ACP"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "permission"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.KeyVersion",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.KeyVersion",
          "typeAlias": {"value": "KeyVersion"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "value"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "version"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.MultipartUploadListing",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.MultipartUploadListing",
          "typeAlias": {"value": "MultipartUploadListing"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "bucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {"type": "String"},
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.lang.String"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "commonPrefixes"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "delimiter"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "encodingType"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "keyMarker"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxUploads"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "org.mule.extension.s3.api.model.MultipartUpload",
                    "hasDefaultConstructor": true,
                    "isInstantiable": true,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "org.mule.extension.s3.api.model.MultipartUpload",
                  "typeAlias": {"value": "MultipartUpload"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {"typeId": "java.time.LocalDateTime"},
                      "type": "DateTime"
                    },
                    "key": {"name": "initiated"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.io.Serializable"],
                          "parent": "",
                          "classname": "org.mule.extension.s3.api.model.Owner",
                          "hasDefaultConstructor": true,
                          "isInstantiable": true,
                          "isFinal": false,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "org.mule.extension.s3.api.model.Owner",
                        "typeAlias": {"value": "Owner"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "displayName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "id"}
                        }
                      ]
                    },
                    "key": {"name": "initiator"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "key"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.io.Serializable"],
                          "parent": "",
                          "classname": "org.mule.extension.s3.api.model.Owner",
                          "hasDefaultConstructor": true,
                          "isInstantiable": true,
                          "isFinal": false,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "org.mule.extension.s3.api.model.Owner",
                        "typeAlias": {"value": "Owner"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "displayName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "id"}
                        }
                      ]
                    },
                    "key": {"name": "owner"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "storageClass"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "uploadId"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.MultipartUpload"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "multipartUploads"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "nextKeyMarker"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "nextUploadIdMarker"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "prefix"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "truncated"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "uploadIdMarker"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.ObjectResult",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.ObjectResult",
          "typeAlias": {"value": "ObjectResult"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "etag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "expirationTime"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "expirationTimeRuleId"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "lastModifiedDate"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "versionId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.Owner",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.Owner",
          "typeAlias": {"value": "Owner"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "displayName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "id"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.PartETag",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.PartETag",
          "typeAlias": {"value": "PartETag"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "etag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "partNumber"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.PartListing",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.PartListing",
          "typeAlias": {"value": "PartListing"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "bucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "encodingType"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Owner",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Owner",
                "typeAlias": {"value": "Owner"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "displayName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "id"}
                }
              ]
            },
            "key": {"name": "initiator"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "key"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxParts"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "nextPartNumberMarker"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Owner",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Owner",
                "typeAlias": {"value": "Owner"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "displayName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "id"}
                }
              ]
            },
            "key": {"name": "owner"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "partNumberMarker"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "org.mule.extension.s3.api.model.PartSummary",
                    "hasDefaultConstructor": true,
                    "isInstantiable": true,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "org.mule.extension.s3.api.model.PartSummary",
                  "typeAlias": {"value": "PartSummary"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "ETag"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {"typeId": "java.time.LocalDateTime"},
                      "type": "DateTime"
                    },
                    "key": {"name": "lastModified"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "partNumber"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "long",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "size"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.PartSummary"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "parts"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "storageClass"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "truncated"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "uploadId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.S3ObjectSummary",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.S3ObjectSummary",
          "typeAlias": {"value": "S3ObjectSummary"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "ETag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "bucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "key"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "lastModified"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Owner",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Owner",
                "typeAlias": {"value": "Owner"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "displayName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "id"}
                }
              ]
            },
            "key": {"name": "owner"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "size"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "storageClass"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.S3VersionSummary",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.S3VersionSummary",
          "typeAlias": {"value": "S3VersionSummary"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "ETag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "bucketName"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "deleteMarker"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "key"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.LocalDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "lastModified"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "latest"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "org.mule.extension.s3.api.model.Owner",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "org.mule.extension.s3.api.model.Owner",
                "typeAlias": {"value": "Owner"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "displayName"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "id"}
                }
              ]
            },
            "key": {"name": "owner"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "size"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "storageClass"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "versionId"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.s3.api.model.NotificationConfiguration",
            "classname": "org.mule.extension.s3.api.model.TopicConfiguration",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.TopicConfiguration",
          "typeAlias": {"value": "TopicConfiguration"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {"type": "String"},
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.Set",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.lang.String"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "events"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {"type": "String"},
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.lang.String"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "objectPrefixes"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "topicARN"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.s3.api.model.UploadPartResult",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.s3.api.model.UploadPartResult",
          "typeAlias": {"value": "UploadPartResult"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "etag"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "partNumber"}
          }
        ]
      }
    ],
    "messageSources": [],
    "functions": [],
    "configurations": [{
      "displayModel": {"displayName": "Configuration"},
      "externalLibraryModels": [],
      "operations": [
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Aborts a multipart upload. After a multipart upload is aborted, no additional parts can be uploaded using that upload ID. The storage consumed by any previously uploaded parts will be freed. However, if any part uploads are currently in progress, those part uploads may or may not succeed. As a result, it may be necessary to abort a given multipart upload multiple times in order to completely free all storage consumed by all parts.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket containing the multipart upload to abort.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the key of the multipart upload to abort.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the ID of the upload to abort.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "uploadId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "abortMultipartUpload",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "ABORT_MULTIPART_UPLOAD"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Completes a multipart upload by assembling previously uploaded parts.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket containing the multipart upload to complete.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the key under which the multipart upload to complete is stored.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the ID of the multipart upload to complete.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "uploadId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The list of part numbers and ETags that identify the individual parts of the multipart upload to complete.",
                    "displayName": "Part ETags"
                  },
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the list of part numbers and ETags that identify the individual parts of the multipart upload to complete.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:org.mule.extension.s3.api.model.PartETag"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["org.mule.extension.s3.api.model.PartETag"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "partETags",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.CompleteMultipartUploadResult"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "completeMultipartUpload",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "COMPLETE_MULTIPART_UPLOAD"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Copies a source object to a new destination; to copy an object, the caller's account must have read access to the source object and write access to the destination bucket. By default, all object metadata for the source object are copied to the new destination object, unless new object metadata in the specified is provided. The AccessControlList is not copied to the new object, and, unless another ACL specified, PRIVATE is assumed. If no destination bucket is specified, the same that the source bucket is used - local copy. Destination object's Content-Type http header would be set with the specified value and if it is passed null, then the default MIME type 'application/octet-stream' would be set.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the source object's bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourceBucketName",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the source object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourceKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The specific version of the source object to copy, if versioning is enabled. "},
                  "role": "BEHAVIOUR",
                  "description": "the specific version of the source object to copy, if versioning is enabled.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourceVersionId",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The destination object's bucket. If none provided, object is copied within the same bucket."},
                  "role": "BEHAVIOUR",
                  "description": "the destination object's bucket. If none provided, object is copied within the same bucket.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "destinationBucketName",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the destination object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "destinationKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Canned ACL"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "PRIVATE",
                  "description": "the acl of the destination object.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.CannedAccessControlList",
                      "enum": {
                        "values": [
                          "PRIVATE",
                          "PUBLIC_READ",
                          "PUBLIC_READ_WRITE",
                          "AUTHENTICATED_READ",
                          "LOG_DELIVERY_WRITE",
                          "BUCKET_OWNER_READ",
                          "BUCKET_OWNER_FULL_CONTROL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "destinationAcl",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "One of {@link StorageClass} enumerated values, defaults to {@link StorageClass#STANDARD}"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "STANDARD",
                  "description": "one of StorageClass enumerated values, defaults to StorageClass#STANDARD",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.StorageClass",
                      "enum": {
                        "values": [
                          "STANDARD",
                          "STANDARD_IA",
                          "INTELLIGENT_TIERING",
                          "ONEZONE_IA",
                          "REDUCED_REDUNDANCY",
                          "GLACIER"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "destinationStorageClass",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The new metadata of the destination object. If specified, overrides that copied from the source object"},
                  "role": "BEHAVIOUR",
                  "description": "the new metadata of the destination object. If specified, overrides that copied from the source object",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.util.Map",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [
                        "java.lang.String",
                        "java.lang.String"
                      ],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": true
                    }},
                    "type": "Object",
                    "fields": [],
                    "open": {"type": "String"}
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "destinationUserMetadata",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The modified constraint that restricts this request to executing only if the object has been modified after the specified date. "},
                  "role": "BEHAVIOUR",
                  "description": "The modified constraint that restricts this request to executing only if the object has been modified after the specified date.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "modifiedSince",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The unmodified constraint that restricts this request to executing only if the object has not been modified after this date. "},
                  "role": "BEHAVIOUR",
                  "description": "The unmodified constraint that restricts this request to executing only if the object has not been modified after this date.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "unmodifiedSince",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Encryption method for server-side encryption. Supported value AES256.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "encryption",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the destination object's Content-Type HTTP header",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentType",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 14
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 15
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 16
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.ObjectResult"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "copyObject",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "COPY_OBJECT"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Creates a new bucket; connector must not be configured as anonymous for this operation to succeed. Bucket names must be unique across all of Amazon S3, that is, among all their users. Bucket ownership is similar to the ownership of Internet domain names. Within Amazon S3, only a single user owns each bucket. Once a uniquely named bucket is created in Amazon S3, organize and name the objects within the bucket in any way. Ownership of the bucket is retained as long as the owner has an Amazon S3 account. To conform with DNS requirements, buckets names must: not contain underscores, be between 3 and 63 characters long, not end with a dash, not contain adjacent periods, not contain dashes next to periods and not contain uppercase characters. Do not make bucket create or delete calls in the high availability code path of an application. Create or delete buckets in a separate initialization or setup.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "The bucket to create. It must not exist yet.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": "US_STANDARD",
                  "description": "the region where to create the new bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "valueProviderModel": {
                    "partOrder": 1,
                    "requiresConnection": false,
                    "isOpen": true,
                    "actingParameters": [],
                    "requiresConfiguration": false,
                    "providerName": "region"
                  },
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "region",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Canned ACL"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "PRIVATE",
                  "description": "the access control list of the new bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.CannedAccessControlList",
                      "enum": {
                        "values": [
                          "PRIVATE",
                          "PUBLIC_READ",
                          "PUBLIC_READ_WRITE",
                          "AUTHENTICATED_READ",
                          "LOG_DELIVERY_WRITE",
                          "BUCKET_OWNER_READ",
                          "BUCKET_OWNER_FULL_CONTROL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "acl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.Bucket"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "createBucket",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "CREATE_BUCKET"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Uploads an object to S3. Supported contents are InputStreams, Strings, byte arrays and Files.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The content to be uploaded to S3, capable of creating a {@link PutObjectRequest}."},
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the content to be uploaded to S3, capable of creating a PutObjectRequest.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Any"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "objectContent",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Canned ACL"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "PRIVATE",
                  "description": "the access control list of the new object",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.CannedAccessControlList",
                      "enum": {
                        "values": [
                          "PRIVATE",
                          "PUBLIC_READ",
                          "PUBLIC_READ_WRITE",
                          "AUTHENTICATED_READ",
                          "LOG_DELIVERY_WRITE",
                          "BUCKET_OWNER_READ",
                          "BUCKET_OWNER_FULL_CONTROL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "acl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Encrypt objects uploaded to S3 buckets with AWS KMS master key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "kmsMasterKey",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Metadata",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.util.Map",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [
                        "java.lang.String",
                        "java.lang.String"
                      ],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": true
                    }},
                    "type": "Object",
                    "fields": [],
                    "open": {"type": "String"}
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "userMetadata",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "lastModified",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The Content-Length HTTP header indicating the size of the associated object in bytes.",
                    "example": "3495"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentLength",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The Content-Type HTTP header indicating the type of content stored in the associated object.",
                    "example": "text/html; charset=ISO-8859-4"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentType",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The Content-Language HTTP header which describes the natural language(s) of the intended audience for the enclosed entity.",
                    "example": "en"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentLanguage",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional Content-Encoding HTTP header specifying what content encodings have been applied to the object and what decoding mechanisms must be applied in order to obtain the media-type referenced by the Content-Type field.",
                    "example": "gzip"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentEncoding",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional Cache-Control HTTP header which allows the user to specify caching behavior along the HTTP request/reply chain.",
                    "example": "public, max-age=31536000"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "cacheControl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The base64 encoded 128-bit MD5 digest of the associated object (content - not including headers) according to RFC 1864.",
                    "example": "md5-digest"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentMD5",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 14
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional Content-Disposition HTTP header, which specifies presentational information such as the recommended filename for the object to be saved as.",
                    "example": "attachment"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentDisposition",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 15
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The entity tag is a hash of the object.",
                    "example": "xyzzy"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "etag",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 16
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The version ID of the associated Amazon S3 object if available.",
                    "example": "111111"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 17
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the server-side encryption algorithm to use when Amazon S3 creates an object.",
                    "example": "aws:kms"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sseAlgorithm",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 18
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the algorithm to use to when encrypting the object.",
                    "example": "AES256"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sseCustomerAlgorithm",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 19
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the base64-encoded 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
                    "example": "base64-encoded_128-bit_MD5_digest_of_the_encryption_key"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sseCustomerKeyMd5",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 20
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The expiration time for the object."},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "expirationTime",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 21
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The rule ID of object's expiration configuration.",
                    "example": "This_is_expiration_time_rule_id"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "expirationTimeRuleId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 22
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The new restore expiration time for the object."},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "restoreExpirationTime",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 23
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Sets the boolean value which indicates whether there is ongoing restore request.",
                    "example": "false"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "ongoingRestore",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 24
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Set the date when the object is no longer cacheable."},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "httpExpiresDate",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 25
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The storage class of the object."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "STANDARD",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.StorageClass",
                      "enum": {
                        "values": [
                          "STANDARD",
                          "STANDARD_IA",
                          "INTELLIGENT_TIERING",
                          "ONEZONE_IA",
                          "REDUCED_REDUNDANCY",
                          "GLACIER"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "storageClass",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 26
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "the AWS Key Management System key id used for Server Side Encryption of the Amazon S3 object.",
                    "example": "testkey"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sseAwsKmsKeyId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 27
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "If a bucket is enabled for Requester Pays, then any attempt of operation from it without Requester Pays enabled will result in a 403 error and the bucket owner will be charged for the request. Enabling Requester Pays disables the ability to have anonymous access to bucket.",
                    "example": "false"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "requesterCharged",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 28
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The replication status of the object if it is from a bucket that is the source or destination in a cross-region replication.",
                    "example": "COMPLETED"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "replicationStatus",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 29
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 30
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 31
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 32
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.ObjectResult"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "createObject",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "CREATE_OBJECT"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Returns a pre-signed URL for accessing an Amazon S3 object. The pre-signed URL can be shared to other users, allowing access to the resource without providing an account's AWS security credentials.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket involved in this request.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the key of the object involved in this request.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The expiration date at which point the new pre-signed URL will no longer be accepted by Amazon S3."},
                  "role": "BEHAVIOUR",
                  "description": "the expiration date at which point the new pre-signed URL will no longer be accepted by Amazon S3.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "expiration",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Content MD5"},
                  "role": "BEHAVIOUR",
                  "description": "the expected content-md5 header of the request.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentMd5",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the expected content-type of the request.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "contentType",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": "PUT",
                  "description": "the HTTP method (GET, PUT, DELETE, HEAD) to be used in this request.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.HttpMethod",
                      "enum": {
                        "values": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "HEAD",
                          "PATCH"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "method",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the encryption method (KMS, AES256) to use for the presigned URL.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.SSEAlgorithm",
                      "enum": {
                        "values": [
                          "AES256",
                          "KMS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sseS3Encryption",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["text/plain"],
                "id": "text/plain",
                "label": "text/plain"
              },
              "type": "String"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "createObjectPresignedUri",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "CREATE_OBJECT_PRESIGNED_URI"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes the specified bucket. All objects (and all object versions, if versioning was ever enabled) in the bucket must be deleted before the bucket itself can be deleted; this restriction can be relaxed by specifying the attribute force=\"true\".",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket to delete",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Optional true if the bucket must be deleted even if it is not empty, false if operation should fail in such scenario."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "optional true if the bucket must be deleted even if it is not empty, false if operation should fail in such scenario.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "force",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteBucket",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_BUCKET"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes the Cross Origin Configuration information set for the bucket. To use this operation, you must have permission to perform the s3:PutCORSConfiguration action. The bucket owner has this permission by default and can grant this permission to others.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket to delete Cross Origin Configuration.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteBucketCorsConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_BUCKET_CORS_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes the lifecycle configuration from the specified bucket. Amazon S3 removes all the lifecycle configuration rules in the lifecycle subresource associated with the bucket. Your objects never expire, and Amazon S3 no longer automatically deletes any objects on the basis of rules contained in the deleted lifecycle configuration.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose lifecycle configuration to delete.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteBucketLifecycleConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_BUCKET_LIFECYCLE_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes the bucket's policy. Only the owner of the bucket can delete the bucket policy. Bucket policies provide access control management at the bucket level for both the bucket resource and contained object resources.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose policy to delete",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteBucketPolicy",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_BUCKET_POLICY"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes the tagging configuration associated with the specified bucket. By default, the bucket owner has this permission and can grant this permission to others.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose tag to delete.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteBucketTaggingConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_BUCKET_TAGGING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Removes the website configuration for a bucket; this operation requires the DeleteBucketWebsite permission. By default, only the bucket owner can delete the website configuration attached to a bucket. However, bucket owners can grant other users permission to delete the website configuration by writing a bucket policy granting them the <code>S3:DeleteBucketWebsite<\/code> permission. Calling this operation on a bucket with no website configuration does not fail, but calling this operation a bucket that does not exist does.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose website configuration to delete",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteBucketWebsiteConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_BUCKET_WEBSITE_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes a given object, only the owner of the bucket containing the version can perform this operation. If version is specified, versioning must be enabled, and once deleted, there is no method to restore such version. Otherwise, once deleted, the object can only be restored if versioning was enabled when the object was deleted. If attempting to delete an object that does not exist, Amazon S3 will return a success message instead of an error message.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the specific version of the object to delete, if versioning is enabled.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteObject",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_OBJECT"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes multiple objects in a single bucket from S3. Version of the keys is optional. <p> In some cases, some objects will be successfully deleted, while some attempts will cause an error. If any object in the request cannot be deleted, this method throws a com.amazonaws.services.s3.model.MultiObjectDeleteException with details of the error. <\/p>",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the objects bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the objects keys, version is optional",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:org.mule.extension.s3.api.model.KeyVersion"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["org.mule.extension.s3.api.model.KeyVersion"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "keys",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "deleteObjects",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "DELETE_OBJECTS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Answers the access control list of the specified bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose acl to retrieve.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.Grant"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.Grant"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.attributes.AccessControlListAttributes"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketAcl",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_ACL"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Answers the cors configuration information set for the bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose cors to retrieve.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.CORSRule"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.CORSRule"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketCorsConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_CORS_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Returns the lifecycle configuration information set on the bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose lifecycle configuration information to retrieve.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.BLCRule"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.BLCRule"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketLifecycleConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_LIFECYCLE_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Gets the geographical region where Amazon S3 stores the specified bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "The target bucket name.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["application/plain"],
                "id": "application/plain",
                "label": "application/plain"
              },
              "type": "String"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketLocation",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_LOCATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Answers the logging status of a bucket and the permissions users have to view and modify that status.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose logging status to retrieve.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.BucketLoggingConfiguration"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketLoggingConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_LOGGING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Return the notification configuration of a bucket. Currently only topic configuration is supported.",
          "modelProperties": {"typeResolversInformation": {
            "outputResolver": {
              "resolverName": "BucketNotification",
              "requiresConnection": true,
              "requiresConfiguration": true
            },
            "category": "MetadataResolver"
          }},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose notification configuration to retrieve.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": true,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.util.Map",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "java.lang.String",
                  "org.mule.extension.s3.api.model.TopicConfiguration"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": true
              }},
              "type": "Object",
              "fields": [],
              "open": {"type": "@ref:org.mule.extension.s3.api.model.TopicConfiguration"}
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketNotificationConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_NOTIFICATION_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Answers the policy for the given bucket. Only the owner of the bucket can retrieve it. If no policy has been set for the bucket, then a null policy text field will be returned.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose policy to retrieve",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["text/plain"],
                "id": "text/plain",
                "label": "text/plain"
              },
              "type": "String"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketPolicy",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_POLICY"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Return the tag set associated with the bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket whose tagging configuration to retrieve.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {
                "annotations": {"classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "java.util.Map",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [
                    "java.lang.String",
                    "java.lang.String"
                  ],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": true
                }},
                "type": "Object",
                "fields": [],
                "open": {"type": "String"}
              },
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.util.Map"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketTaggingConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_TAGGING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Returns the versioning configuration for the specified bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "The bucket whose versioning configuration will be retrieved.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "annotations": {
                "typeId": "org.mule.extension.s3.api.model.VersioningStatus",
                "enum": {
                  "values": [
                    "OFF",
                    "ENABLED",
                    "SUSPENDED"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketVersioningConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_VERSIONING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Answers the website of the given bucket. This operation requires the GetBucketWebsite permission. By default, only the bucket owner can read the bucket website configuration. However, bucket owners can allow other users to read the website configuration by writing a bucket policy granting them the GetBucketWebsite permission.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the target bucket's name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.BucketWebsiteConfiguration"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getBucketWebsiteConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_BUCKET_WEBSITE_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Gets the object stored in Amazon S3 under the specified bucket and key. Returns null if the specified constraints weren't met. To get an object from Amazon S3, the caller must have com.amazonaws.services.s3.model.Permission#Read access to the object. Callers should be very careful when using this method; the returned Amazon S3 object contains a direct stream of data from the HTTP connection. The underlying HTTP connection cannot be closed until the user finishes reading the data and closes the stream. Regarding conditional get constraints, Amazon S3 will ignore any dates occurring in the future.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The specific version of the object to get its contents, if versioning is enabled. "},
                  "role": "BEHAVIOUR",
                  "description": "the specific version of the object to get its contents, if versioning is enabled.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The modified constraint that restricts this request to executing only if the object has been modified after the specified date."},
                  "role": "BEHAVIOUR",
                  "description": "The modified constraint that restricts this request to executing only if the object has been modified after the specified date.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "modifiedSince",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The unmodified constraint that restricts this request to executing only if the object has not been modified after this date."},
                  "role": "BEHAVIOUR",
                  "description": "The unmodified constraint that restricts this request to executing only if the object has not been modified after this date.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "unmodifiedSince",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The mime type of the payload that this operation outputs.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "outputMimeType",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The encoding of the payload that this operation outputs.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "outputEncoding",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-byte-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "repeatable-in-memory-stream"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "1024",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "repeatable-file-store-stream"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemorySize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-stream"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ByteStreamingStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Range",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The start byte of range header which downloads the specified range bytes of an object",
                    "example": "0"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "start",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The end byte of range header which downloads the specified range bytes of an object",
                    "example": "9223372036854775806"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "9223372036854775806",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "end",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": true
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 14
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["application/octet-stream"],
                "id": "application/octet-stream",
                "label": "application/octet-stream"
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.io.Closeable"],
                "parent": "",
                "classname": "java.io.InputStream",
                "hasDefaultConstructor": true,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Binary"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.attributes.S3ObjectAttributes"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "blocking": true,
          "name": "getObject",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_OBJECT"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Returns the access control list (ACL) of an object. By default, GET returns ACL information about the current version of an object. To return ACL information about a different version, use the versionId attribute.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's version id",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.Grant"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.Grant"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.attributes.AccessControlListAttributes"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getObjectAcl",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_OBJECT_ACL"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Gets only the object metadata stored in Amazon S3 under the specified bucket and key. To get an object metadata from Amazon S3, the caller must have com.amazonaws.services.s3.model.Permission#Read access to the object.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The specific version of the object to get its contents, if versioning is enabled. "},
                  "role": "BEHAVIOUR",
                  "description": "the specific version of the object to get its contents, if versioning is enabled.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.group.ObjectMetadataParameterGroup"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "getObjectMetadata",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "GET_OBJECT_METADATA"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Initiates a multipart upload and returns an upload ID. This upload ID is used to associate all the parts in the specific multipart upload. You specify this upload ID in each of your subsequent upload part requests. You also include this upload ID in the final request to either complete or abort the multipart upload request.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket in which to create the new multipart upload.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the key by which to store the new multipart upload.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The additional information about the new object being created, such as content type & encoding, etc."},
                  "role": "BEHAVIOUR",
                  "description": "the additional information about the new object being created, such as content type & encoding, etc.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.s3.api.group.ObjectMetadataParameterGroup"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "objectMetadata",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional canned Access Control List (ACL) to set permissions for the new object created when the multipart upload is completed.",
                    "displayName": "Canned ACL"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "PRIVATE",
                  "description": "the optional canned Access Control List (ACL) to set permissions for the new object created when the multipart upload is completed.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.CannedAccessControlList",
                      "enum": {
                        "values": [
                          "PRIVATE",
                          "PUBLIC_READ",
                          "PUBLIC_READ_WRITE",
                          "AUTHENTICATED_READ",
                          "LOG_DELIVERY_WRITE",
                          "BUCKET_OWNER_READ",
                          "BUCKET_OWNER_FULL_CONTROL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "acl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Gets the optional redirect location for the new object.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "redirectLocation",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["application/plain"],
                "id": "application/plain",
                "label": "application/plain"
              },
              "type": "String"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "initiateMultipartUpload",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "INITIATE_MULTIPART_UPLOAD"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Answers a list of all Amazon S3 buckets that the authenticated sender of the request owns. Users must authenticate with a valid AWS Access Key ID that is registered with Amazon S3. Anonymous requests cannot list buckets, and users cannot list buckets that they did not create.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the region from where to list the buckets.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "valueProviderModel": {
                    "partOrder": 1,
                    "requiresConnection": false,
                    "isOpen": true,
                    "actingParameters": [],
                    "requiresConfiguration": false,
                    "providerName": "region"
                  },
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "region",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.Bucket"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["org.mule.extension.s3.api.model.Bucket"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "listBuckets",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "LIST_BUCKETS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Lists in-progress multipart uploads. An in-progress multipart upload is a multipart upload that has been initiated, using the InitiateMultipartUpload request, but has not yet been completed or aborted.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket containing the uploads to list.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional delimiter parameter that causes multipart uploads for keys that contain the same string between the prefix and the first occurrence of the delimiter to be combined into a single result element."},
                  "role": "BEHAVIOUR",
                  "description": "the optional delimiter parameter that causes multipart uploads for keys that contain the same string between the prefix and the first occurrence of the delimiter to be combined into a single result element.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "delimiter",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional encodingType parameter indicating the encoding method to be applied on the response."},
                  "role": "BEHAVIOUR",
                  "description": "the optional encodingType parameter indicating the encoding method to be applied on the response.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "encodingType",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the optional key marker indicating where in the results to begin listing.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "keyMarker",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional maximum number of uploads to return, or null if no maximum number of uploads has been set for this request."},
                  "role": "BEHAVIOUR",
                  "description": "the optional maximum number of uploads to return, or null if no maximum number of uploads has been set for this request.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maxUploads",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional prefix parameter that restricts the response to multipart uploads for keys that begin with the specified prefix."},
                  "role": "BEHAVIOUR",
                  "description": "the optional prefix parameter that restricts the response to multipart uploads for keys that begin with the specified prefix.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "prefix",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the optional upload ID marker indicating where in the results to begin listing.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "uploadIdMarker",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.MultipartUploadListing"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "listMultipartUploads",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "LIST_MULTIPART_UPLOADS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Lazily lists all objects for a given prefix. As S3 does not limit in any way the number of objects, such listing can retrieve an arbitrary amount of objects, and may need to perform extra calls to the api while it is iterated.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the target bucket's name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the prefix of the objects to be listed. If unspecified, all objects are listed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "prefix",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Where in the bucket to begin listing. The list will only include keys that occur lexicographically after the marker."},
                  "role": "BEHAVIOUR",
                  "description": "where in the bucket to begin listing. The list will only include keys that occur lexicographically after the marker",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "marker",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Causes keys that contain the same string between a prefix and the first occurrence of the delimiter to be rolled up into a single result element."},
                  "role": "BEHAVIOUR",
                  "description": "causes keys that contain the same string between a prefix and the first occurrence of the delimiter to be rolled up into a single result element.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "delimiter",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The maximum number of keys to return per page. If not specified S3 will limit the number of returned results per page."},
                  "role": "BEHAVIOUR",
                  "description": "The maximum number of keys to return per page. If not specified S3 will limit the number of returned results per page.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maxKeys",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": "NOT_ENCODED",
                  "description": "The encoding method to be applied on the response.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.EncodingType",
                      "enum": {
                        "values": [
                          "NOT_ENCODED",
                          "URL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "encodingType",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-object-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "repeatable-in-memory-iterable"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of instances that will be initially be allowed to be kept in memory in order to consume the stream and provide random access to it. If the stream contains more data than can fit into this buffer, then it will be expanded according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize. Default value is 100 instances."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will the buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full. Default value is 100 instances."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "500",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "repeatable-file-store-iterable"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of instances that will be kept in memory. If more than that is required, then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemoryObjects"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "description": {"value": "This configuration allows the stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-iterable"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ObjectStreamingStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.S3ObjectSummary"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "org.mule.runtime.extension.api.runtime.streaming.PagingProvider",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "org.mule.extension.s3.internal.connection.S3Connection",
                  "org.mule.extension.s3.api.model.S3ObjectSummary"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "blocking": true,
          "name": "listObjects",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "LIST_OBJECTS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Lists the parts that have been uploaded for a specific multipart upload.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"summary": "The name of the bucket containing the multipart upload whose parts are being listed."},
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket containing the multipart upload whose parts are being listed.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the key of the associated multipart upload whose parts are being listed.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the ID of the multipart upload whose parts are being listed.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "uploadId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional encodingType parameter indicating the encoding method to be applied on the response."},
                  "role": "BEHAVIOUR",
                  "description": "the optional encodingType parameter indicating the encoding method to be applied on the response.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "encodingType",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the optional maximum number of parts to be returned in the part listing.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maxParts",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional part number marker indicating where in the results to being listing parts."},
                  "role": "BEHAVIOUR",
                  "description": "the optional part number marker indicating where in the results to being listing parts.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "partNumberMarker",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 10
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.PartListing"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "listParts",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "LIST_PARTS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Lazily lists all object versions for a given bucket that has versioning enabled. As S3 does not limit in any way the number of objects, such listing can retrieve an arbitrary amount of object versions, and may need to perform extra calls to the api while it is iterated.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the target bucket's name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Optional parameter restricting the response to keys which begin with the specified prefix. "},
                  "role": "BEHAVIOUR",
                  "description": "optional parameter restricting the response to keys which begin with the specified prefix.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "prefix",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Where in the sorted list of all versions in the specified bucket to begin returning results. Results are always ordered first alphabetically and then from most recent version to least recent version. "},
                  "role": "BEHAVIOUR",
                  "description": "where in the sorted list of all versions in the specified bucket to begin returning results. Results are always ordered first alphabetically and then from most recent version to least recent version.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "keyMarker",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Where in the sorted list of all versions in the specified bucket to begin returning results. Results are always ordered first alphabetically and then from most recent version to least recent version."},
                  "role": "BEHAVIOUR",
                  "description": "where in the sorted list of all versions in the specified bucket to begin returning results. Results are always ordered first alphabetically and then from most recent version to least recent version.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionIdMarker",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the list. "},
                  "role": "BEHAVIOUR",
                  "description": "causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the list.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "delimiter",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The maximum number of results to return per page. If not specified, S3 will limit the number of returned results per page."},
                  "role": "BEHAVIOUR",
                  "description": "The maximum number of results to return per page. If not specified, S3 will limit the number of returned results per page.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maxResults",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The encoding method to be applied on the response. "},
                  "role": "BEHAVIOUR",
                  "defaultValue": "NOT_ENCODED",
                  "description": "the encoding method to be applied on the response.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.EncodingType",
                      "enum": {
                        "values": [
                          "NOT_ENCODED",
                          "URL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "encodingType",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-object-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "repeatable-in-memory-iterable"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of instances that will be initially be allowed to be kept in memory in order to consume the stream and provide random access to it. If the stream contains more data than can fit into this buffer, then it will be expanded according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize. Default value is 100 instances."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will the buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full. Default value is 100 instances."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "500",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "repeatable-file-store-iterable"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of instances that will be kept in memory. If more than that is required, then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemoryObjects"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "description": {"value": "This configuration allows the stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-iterable"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ObjectStreamingStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 12
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {"type": "@ref:org.mule.extension.s3.api.model.S3VersionSummary"},
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "org.mule.runtime.extension.api.runtime.streaming.PagingProvider",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "org.mule.extension.s3.internal.connection.S3Connection",
                  "org.mule.extension.s3.api.model.S3VersionSummary"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "blocking": true,
          "name": "listVersions",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "LIST_VERSIONS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Set the permissions on an existing bucket using access control lists (ACL)",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The owner of the ACL.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.s3.api.model.Owner"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "owner",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "The grants of the ACL.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:org.mule.extension.s3.api.model.Grant"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["org.mule.extension.s3.api.model.Grant"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "grants",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketAcl",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_ACL"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Sets the cors configuration for your bucket. If the configuration exists, Amazon S3 replaces it.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the cross-origin rules of a bucket.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:org.mule.extension.s3.api.model.CORSRule"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["org.mule.extension.s3.api.model.CORSRule"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "rules",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketCorsConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_CORS_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the lifecycle configuration rules of a bucket.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:org.mule.extension.s3.api.model.BLCRule"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["org.mule.extension.s3.api.model.BLCRule"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "lifecycleConfigurationRules",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketLifecycleConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_LIFECYCLE_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "The bucket name.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "The bucket logging configuration.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.s3.api.model.BucketLoggingConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "bucketLoggingConfiguration",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketLoggingConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_LOGGING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Sets the notification configuration for the specified bucket. By default, new buckets have no notification configuration set.",
          "modelProperties": {"typeResolversInformation": {
            "inputResolvers": {"topicConfigurations": {
              "resolverName": "BucketNotification",
              "requiresConnection": true,
              "requiresConfiguration": true
            }},
            "category": "MetadataResolver"
          }},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the Amazon S3 bucket whose notification configuration is being set.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The request object containing all options for setting the bucket notification configuration."},
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "The request object containing all options for setting the bucket notification configuration.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.util.Map",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [
                        "java.lang.String",
                        "org.mule.extension.s3.api.model.TopicConfiguration"
                      ],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": true
                    }},
                    "type": "Object",
                    "fields": [],
                    "open": {"type": "@ref:org.mule.extension.s3.api.model.TopicConfiguration"}
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": true,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "topicConfigurations",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketNotificationConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_NOTIFICATION_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Sets the bucket's policy, overriding any previously set. Only the owner of the bucket can set a bucket policy. Bucket policies provide access control management at the bucket level for both the bucket resource and contained object resources. Only one policy can be specified per-bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the policy text",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "policyText",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": true,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketPolicy",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_POLICY"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Add a set of tags to an existing bucket",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "a set of tags",
                  "modelProperties": {},
                  "type": {
                    "item": {
                      "annotations": {"classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "java.util.Map",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [
                          "java.lang.String",
                          "java.lang.String"
                        ],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": true
                      }},
                      "type": "Object",
                      "fields": [],
                      "open": {"type": "String"}
                    },
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["java.util.Map"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "tagSets",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketTaggingConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_TAGGING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Sets the versioning status for the given bucket. A bucket's versioning configuration can be in one of three possible states: Off, Enabled and Suspended. By default, new buckets are in the Off state. Once versioning is enabled for a bucket the status can never be reverted to Off.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "The configuration to set.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.VersioningStatus",
                      "enum": {
                        "values": [
                          "OFF",
                          "ENABLED",
                          "SUSPENDED"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "versioningStatus",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketVersioningConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_VERSIONING_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Sets the given bucket's website configuration. This operation requires the PutBucketWebsite permission. By default, only the bucket owner can configure the website attached to a bucket. However, bucket owners can allow other users to set the website configuration by writing a bucket policy granting them the S3:PutBucketWebsite permission.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the bucket website configuration",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.s3.api.model.BucketWebsiteConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "bucketWebsiteConfiguration",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setBucketWebsiteConfiguration",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_BUCKET_WEBSITE_CONFIGURATION"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Set the access control list (ACL) permissions for an object that already exists in a bucket",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the specific version of the object",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "versionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the owner of the ACL",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.s3.api.model.Owner"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "owner",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the Grants of the ACL",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:org.mule.extension.s3.api.model.Grant"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["org.mule.extension.s3.api.model.Grant"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "grants",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setObjectAcl",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_OBJECT_ACL"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Sets the Amazon S3 storage class for the given object. Changing the storage class of an object in a bucket that has enabled versioning creates a new version of the object with the new storage class. The existing version of the object preservers the previous storage class.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's bucket name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the object's key",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "STANDARD",
                  "description": "the storage class to set",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.extension.s3.api.model.StorageClass",
                      "enum": {
                        "values": [
                          "STANDARD",
                          "STANDARD_IA",
                          "INTELLIGENT_TIERING",
                          "ONEZONE_IA",
                          "REDUCED_REDUNDANCY",
                          "GLACIER"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "storageClass",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "setObjectStorageClass",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "SET_OBJECT_STORAGE_CLASS"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Uploads a part in a multipart upload. You must initiate a multipart upload before you can upload any part.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"summary": "The name of the bucket containing the existing, initiated multipart upload, with which this new part will be associated."},
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket containing the existing, initiated multipart upload, with which this new part will be associated.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the key of the initiated multipart upload.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The ID of the existing, initiated multipart upload with which this new part will be associated."},
                  "role": "BEHAVIOUR",
                  "description": "the ID of the existing, initiated multipart upload with which this new part will be associated.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "uploadId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "the part number describing this part's position relative to the other parts in the multipart upload."},
                  "role": "BEHAVIOUR",
                  "description": "the part number describing this part's position relative to the other parts in the multipart upload.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "partNumber",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the size of this part, in bytes.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "partSize",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "optional, but recommended, MD5 hash of the content of this part.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "md5Digest",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the stream containing the data to upload for the new part.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Any"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "content",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional offset in the specified file, at which to begin uploading data for this part."},
                  "role": "BEHAVIOUR",
                  "description": "the optional offset in the specified file, at which to begin uploading data for this part.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fileOffset",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "True if the creator of this request has indicated this part is the last part being uploaded in a multipart upload."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "true if the creator of this request has indicated this part is the last part being uploaded in a multipart upload.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "isLastPart",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 13
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.UploadPartResult"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "uploadPart",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "UPLOAD_PART"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        },
        {
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Copies a source object to a part of a multipart upload. To copy an object, the caller's account must have read access to the source object and write access to the destination bucket.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "the name of the bucket containing the source object to be copied.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourceBucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the source bucket key under which the source object to be copied is stored.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourceKey",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The version of the source object that was copied, if you have enabled versioning on the source bucket."},
                  "role": "BEHAVIOUR",
                  "description": "the version of the source object that was copied, if you have enabled versioning on the source bucket.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourceVersionId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the destination bucket name which will contain the new, copied object.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "destinationBucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the destination bucket key under which the new, copied object will be stored.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "destinationKey",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The ID of the existing, initiated multipart upload with which this new part will be associated."},
                  "role": "BEHAVIOUR",
                  "description": "the ID of the existing, initiated multipart upload with which this new part will be associated.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "uploadId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The part number describing this part's position relative to the other parts in the multipart upload."},
                  "role": "BEHAVIOUR",
                  "description": "the part number describing this part's position relative to the other parts in the multipart upload.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "partNumber",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Perform a copy if the source object entity tag (ETag) matches the specified value.",
                    "displayName": "Matching ETag Constraints"
                  },
                  "role": "BEHAVIOUR",
                  "description": "perform a copy if the source object entity tag (ETag) matches the specified value.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "String"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["java.lang.String"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "matchingETagConstraints",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional modified constraint that restricts this request to executing only if the source object has been modified after the specified date."},
                  "role": "BEHAVIOUR",
                  "description": "the optional modified constraint that restricts this request to executing only if the source object has been modified after the specified date.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "modifiedSince",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional unmodified constraint that restricts this request to executing only if the source object has not been modified after the specified date."},
                  "role": "BEHAVIOUR",
                  "description": "the optional unmodified constraint that restricts this request to executing only if the source object has not been modified after the specified date.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "java.time.LocalDateTime"},
                    "type": "DateTime"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "unmodifiedSince",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "The optional first byte from the source bucket to start copy from (starts from 0)."},
                  "role": "BEHAVIOUR",
                  "description": "the optional first byte from the source bucket to start copy from (starts from 0).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "firstByte",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "the optional last byte from the source bucket to copy till.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "lastByte",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 14
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 15
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 16
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.CopyPartResult"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "uploadPartCopy",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "S3",
              "type": "PROCESSOR"
            },
            "namespace": "S3",
            "type": "UPLOAD_PART_COPY"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "S3:INVALID_RANGE",
            "S3:REQUEST_TIME_TOO_SKEWED",
            "S3:REDIRECT",
            "S3:SERVICE_UNAVAILABLE",
            "S3:INVALID_STORAGE_CLASS",
            "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
            "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
            "S3:UNEXPECTED_CONTENT",
            "S3:ENTITY_TOO_SMALL",
            "S3:NO_SUCH_BUCKET",
            "S3:INVALID_PART",
            "S3:INVALID_SOAP_REQUEST",
            "S3:NO_SUCH_VERSION",
            "S3:METADATA_TOO_LARGE",
            "S3:PRECONDITION_FAILED",
            "S3:BUCKET_ALREADY_EXISTS",
            "S3:INVALID_URI",
            "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
            "S3:MISSING_SECURITY_ELEMENT",
            "S3:NOT_SIGNED_UP",
            "S3:INVALID_ADDRESSING_HEADER",
            "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
            "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
            "S3:INVALID_PAYER",
            "S3:INVALID_SECURITY",
            "S3:NO_SUCH_BUCKET_POLICY",
            "S3:OPERATION_ABORTED",
            "S3:INVALID_ACCESS_KEY_ID",
            "S3:INVALID_LOCATION_CONSTRAINT",
            "S3:INLINE_DATA_TOO_LARGE",
            "S3:SIGNATURE_DOES_NOT_MATCH",
            "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
            "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
            "S3:KEY_TOO_LONG",
            "S3:INVALID_BUCKET_NAME",
            "S3:TEMPORARY_REDIRECT",
            "S3:INVALID_TOKEN",
            "S3:BUCKET_NOT_EMPTY",
            "S3:MALFORMED_POST_REQUEST",
            "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
            "S3:BAD_DIGEST",
            "S3:REQUEST_TIMEOUT",
            "S3:TOO_MANY_BUCKETS",
            "S3:NO_SUCH_KEY",
            "S3:MISSING_ATTACHMENT",
            "S3:INVALID_BUCKET_STATE",
            "S3:RETRY_EXHAUSTED",
            "S3:INVALID_PART_ORDER",
            "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
            "S3:INVALID_POLICY_DOCUMENT",
            "S3:ACCOUNT_PROBLEM",
            "S3:MALFORMED_XML",
            "S3:USER_KEY_MUST_BE_SPECIFIED",
            "S3:MISSING_CONTENT_LENGTH",
            "S3:INVALID_DIGEST",
            "S3:ACCESS_DENIED",
            "S3:MISSING_REQUEST_BODY_ERROR",
            "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
            "S3:TOKEN_REFRESH_REQUIRED",
            "S3:RESTORE_ALREADY_IN_PROGRESS",
            "S3:NO_LOGGING_STATUS_FOR_KEY",
            "S3:INVALID_OBJECT_STATE",
            "S3:CONNECTIVITY",
            "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
            "S3:PERMANENT_REDIRECT",
            "S3:INVALID_REQUEST",
            "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
            "S3:UNKNOWN",
            "S3:MALFORMED_ACL_ERROR",
            "S3:CREDENTIALS_NOT_SUPPORTED",
            "S3:NOT_IMPLEMENTED",
            "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
            "S3:NO_SUCH_UPLOAD",
            "S3:INVALID_ARGUMENT",
            "S3:INTERNAL_ERROR",
            "S3:SLOW_DOWN",
            "S3:METHOD_NOT_ALLOWED",
            "S3:ENTITY_TOO_LARGE",
            "S3:EXPIRED_TOKEN",
            "S3:MISSING_SECURITY_HEADER",
            "S3:BUCKET_ALREADY_OWNED_BY_YOU",
            "S3:INCOMPLETE_BODY"
          ]
        }
      ],
      "messageSources": [
        {
          "displayModel": {"displayName": "On Deleted Object"},
          "kind": "source",
          "description": "",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "notificationQueueName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": false,
                  "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "primaryNodeOnly",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Configures the scheduler that triggers the polling",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 10},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "scheduling-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.runtime.core.api.source.scheduler.Scheduler"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "schedulingStrategy",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Defines a policy for processing the redelivery of the same message",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-redelivery-policy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "RedeliveryPolicy"},
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                        "model": {
                          "annotations": {
                            "default": "5",
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "maxRedeliveryCount"}
                      },
                      {
                        "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                        "model": {"type": "String"},
                        "key": {"name": "messageDigestAlgorithm"}
                      },
                      {
                        "annotations": {
                          "flattened": {},
                          "description": {"value": "Defines which strategy is used to identify the messages."}
                        },
                        "model": {
                          "annotations": {
                            "exclusiveOptionals": {
                              "isOneRequired": true,
                              "exclusiveParameterNames": [
                                "useSecureHash",
                                "idExpression"
                              ]
                            },
                            "typeId": "RedeliveryPolicyMessageIdentifier"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                              "model": {
                                "annotations": {"default": "true"},
                                "type": "Boolean"
                              },
                              "key": {"name": "useSecureHash"}
                            },
                            {
                              "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                              "model": {"type": "String"},
                              "key": {"name": "idExpression"}
                            }
                          ]
                        },
                        "key": {"name": "MessageIdentifier"}
                      },
                      {
                        "annotations": {
                          "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                          "stereotype": {"allowedStereotypes": [{
                            "namespace": "OS",
                            "type": "OBJECT_STORE"
                          }]}
                        },
                        "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                        "key": {"name": "objectStore"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "redeliveryPolicy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Redelivery",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "hasResponse": false,
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.S3ObjectSummary"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.attributes.S3ObjectAttributes"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "runsOnPrimaryNodeOnly": false,
          "name": "deleted-object-trigger",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "SOURCE"
              },
              "namespace": "S3",
              "type": "SOURCE"
            },
            "namespace": "S3",
            "type": "DELETED-OBJECT-TRIGGER"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": []
        },
        {
          "displayModel": {"displayName": "On New Object"},
          "kind": "source",
          "description": "",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bucketName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "notificationQueueName",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "S3",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": false,
                  "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "primaryNodeOnly",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Configures the scheduler that triggers the polling",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 10},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "scheduling-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.runtime.core.api.source.scheduler.Scheduler"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "schedulingStrategy",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Defines a policy for processing the redelivery of the same message",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-redelivery-policy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "RedeliveryPolicy"},
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                        "model": {
                          "annotations": {
                            "default": "5",
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "maxRedeliveryCount"}
                      },
                      {
                        "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                        "model": {"type": "String"},
                        "key": {"name": "messageDigestAlgorithm"}
                      },
                      {
                        "annotations": {
                          "flattened": {},
                          "description": {"value": "Defines which strategy is used to identify the messages."}
                        },
                        "model": {
                          "annotations": {
                            "exclusiveOptionals": {
                              "isOneRequired": true,
                              "exclusiveParameterNames": [
                                "useSecureHash",
                                "idExpression"
                              ]
                            },
                            "typeId": "RedeliveryPolicyMessageIdentifier"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                              "model": {
                                "annotations": {"default": "true"},
                                "type": "Boolean"
                              },
                              "key": {"name": "useSecureHash"}
                            },
                            {
                              "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                              "model": {"type": "String"},
                              "key": {"name": "idExpression"}
                            }
                          ]
                        },
                        "key": {"name": "MessageIdentifier"}
                      },
                      {
                        "annotations": {
                          "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                          "stereotype": {"allowedStereotypes": [{
                            "namespace": "OS",
                            "type": "OBJECT_STORE"
                          }]}
                        },
                        "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                        "key": {"name": "objectStore"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "redeliveryPolicy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Redelivery",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "hasResponse": false,
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.model.S3ObjectSummary"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.s3.api.attributes.S3ObjectAttributes"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "runsOnPrimaryNodeOnly": false,
          "name": "new-object-trigger",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "SOURCE"
              },
              "namespace": "S3",
              "type": "SOURCE"
            },
            "namespace": "S3",
            "type": "NEW-OBJECT-TRIGGER"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": []
        }
      ],
      "name": "config",
      "description": "",
      "modelProperties": {"requiredForMetadata": {"requiredParameters": ["name"]}},
      "stereotype": {
        "parent": {
          "namespace": "MULE",
          "type": "MODULE_CONFIG"
        },
        "namespace": "S3",
        "type": "CONFIG"
      },
      "parameterGroupModels": [{
        "name": "General",
        "layoutModel": {
          "password": false,
          "query": false,
          "text": false,
          "order": 1
        },
        "description": "",
        "modelProperties": {},
        "parameters": [
          {
            "role": "BEHAVIOUR",
            "description": "The identifier of this element used to reference it in other components",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "String"
            },
            "required": true,
            "expressionSupport": "NOT_SUPPORTED",
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": false,
              "allowsReferences": false
            },
            "name": "name",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 2
            },
            "allowedStereotypeModels": [],
            "isComponentId": true
          },
          {
            "role": "BEHAVIOUR",
            "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
            "modelProperties": {
              "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
              "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                "localPart": "expiration-policy",
                "prefix": "mule",
                "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
              }}
            },
            "type": {
              "format": "java",
              "annotations": {
                "typeDsl": {
                  "allowTopLevelDefinition": false,
                  "allowInlineDefinition": true
                },
                "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {
                    "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "5",
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "maxIdleTime"}
                },
                {
                  "annotations": {
                    "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "MINUTES",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "timeUnit"}
                }
              ]
            },
            "required": false,
            "expressionSupport": "NOT_SUPPORTED",
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": true,
              "allowsReferences": false
            },
            "name": "expirationPolicy",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 1
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          }
        ],
        "exclusiveParametersModels": [],
        "showInDsl": false
      }],
      "connectionProviders": [
        {
          "externalLibraryModels": [],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "basic",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "connectionTimeout",
            "maxConnections",
            "socketTimeout",
            "accessKey",
            "secretKey",
            "tryDefaultAWSCredentialsProviderChain",
            "region",
            "proxyHost",
            "proxyPort",
            "proxyUsername",
            "proxyPassword",
            "proxyDomain",
            "proxyWorkstation",
            "sessionToken",
            "storageUrl",
            "forceGlobalBucketAccess"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "S3",
            "type": "BASIC"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "displayModel": {
                  "summary": "The session token provided by Amazon STS.",
                  "displayName": "Session Token"
                },
                "role": "BEHAVIOUR",
                "description": "",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "sessionToken",
                "layoutModel": {
                  "password": false,
                  "tabName": "General",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The amount of time to wait (in milliseconds) when initially establishing a connection before the connector gives up and times out. A value of 0 means infinity and is not recommended.",
                    "displayName": "Connection Timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "50000",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Sets the maximum number of allowed open HTTP connections."},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maxConnections",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The amount of time to wait (in milliseconds) for data to be transferred over an established, open connection before the connection times out. A value of 0 means infinity and is not recommended.",
                    "displayName": "Socket Timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "50000",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "socketTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The access key provided by Amazon.",
                    "displayName": "Access Key"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "accessKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The secret key provided by Amazon.",
                    "displayName": "Secret Key"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "secretKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Set this field to true to obtain credentials from the AWS environment, See: https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/credentials.html",
                    "displayName": "Try Default AWSCredentials Provider Chain"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "tryDefaultAWSCredentialsProviderChain",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Set the topic region endpoint.",
                    "displayName": "Region Endpoint"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "US_EAST_1",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "valueProviderModel": {
                    "partOrder": 1,
                    "requiresConnection": false,
                    "isOpen": true,
                    "actingParameters": [],
                    "requiresConfiguration": false,
                    "providerName": "region"
                  },
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "region",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "TLS Configuration"},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {"typeId": "RevocationCheck"},
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "reconnection",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "Reconnection"},
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                        "model": {
                          "annotations": {"default": "false"},
                          "type": "Boolean"
                        },
                        "key": {"name": "failsDeployment"}
                      },
                      {
                        "annotations": {"description": {"value": "The reconnection strategy to use"}},
                        "model": {
                          "of": [
                            {
                              "annotations": {"typeId": "reconnect"},
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                },
                                {
                                  "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                  "model": {
                                    "annotations": {"default": "true"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "blocking"}
                                },
                                {
                                  "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2",
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "count"}
                                }
                              ]
                            },
                            {
                              "annotations": {"typeId": "reconnect-forever"},
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                },
                                {
                                  "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                  "model": {
                                    "annotations": {"default": "true"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "blocking"}
                                }
                              ]
                            }
                          ],
                          "annotations": {"typeId": "ReconnectionStrategy"},
                          "type": "Union"
                        },
                        "key": {"name": "reconnectionStrategy"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnection",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Proxy",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The optional proxy host.",
                    "displayName": "Host"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyHost",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy port.",
                    "displayName": "Port"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyPort",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy username.",
                    "displayName": "Username"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyUsername",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy password.",
                    "displayName": "Password"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyPassword",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy domain.",
                    "displayName": "Domain"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyDomain",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy workstation.",
                    "displayName": "Workstation"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyWorkstation",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Advanced",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The URL to connect to in case an S3 compatible storage is used. If blank, the default AWS S3 one will be used.",
                    "displayName": "S3 Compatible Storage URL",
                    "example": "https://{s3-compatible-storage-host-name}:{port}"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "storageUrl",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Any bucket-related operations invoked against a client with this option enabled will potentially be executed against other regions than the one configured in the client in order to succeed.",
                    "displayName": "Force Global Bucket Access"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "forceGlobalBucketAccess",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        },
        {
          "externalLibraryModels": [],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "role",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "connectionTimeout",
            "maxConnections",
            "socketTimeout",
            "accessKey",
            "secretKey",
            "tryDefaultAWSCredentialsProviderChain",
            "region",
            "proxyHost",
            "proxyPort",
            "proxyUsername",
            "proxyPassword",
            "proxyDomain",
            "proxyWorkstation",
            "roleARN",
            "storageUrl",
            "forceGlobalBucketAccess"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "S3",
            "type": "ROLE"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "displayModel": {
                  "summary": "The Role ARN unique identifies role to assume in order to gain cross account access.",
                  "displayName": "Role ARN"
                },
                "role": "BEHAVIOUR",
                "description": "",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": true,
                "expressionSupport": "SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "roleARN",
                "layoutModel": {
                  "password": false,
                  "tabName": "General",
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The amount of time to wait (in milliseconds) when initially establishing a connection before the connector gives up and times out. A value of 0 means infinity and is not recommended.",
                    "displayName": "Connection Timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "50000",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Sets the maximum number of allowed open HTTP connections."},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maxConnections",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The amount of time to wait (in milliseconds) for data to be transferred over an established, open connection before the connection times out. A value of 0 means infinity and is not recommended.",
                    "displayName": "Socket Timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "50000",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "socketTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The access key provided by Amazon.",
                    "displayName": "Access Key"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "accessKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The secret key provided by Amazon.",
                    "displayName": "Secret Key"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "secretKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Set this field to true to obtain credentials from the AWS environment, See: https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/credentials.html",
                    "displayName": "Try Default AWSCredentials Provider Chain"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "tryDefaultAWSCredentialsProviderChain",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Set the topic region endpoint.",
                    "displayName": "Region Endpoint"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "US_EAST_1",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "valueProviderModel": {
                    "partOrder": 1,
                    "requiresConnection": false,
                    "isOpen": true,
                    "actingParameters": [],
                    "requiresConfiguration": false,
                    "providerName": "region"
                  },
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "region",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "TLS Configuration"},
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {"typeId": "RevocationCheck"},
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "reconnection",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "Reconnection"},
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                        "model": {
                          "annotations": {"default": "false"},
                          "type": "Boolean"
                        },
                        "key": {"name": "failsDeployment"}
                      },
                      {
                        "annotations": {"description": {"value": "The reconnection strategy to use"}},
                        "model": {
                          "of": [
                            {
                              "annotations": {"typeId": "reconnect"},
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                },
                                {
                                  "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                  "model": {
                                    "annotations": {"default": "true"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "blocking"}
                                },
                                {
                                  "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2",
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "count"}
                                }
                              ]
                            },
                            {
                              "annotations": {"typeId": "reconnect-forever"},
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                },
                                {
                                  "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                  "model": {
                                    "annotations": {"default": "true"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "blocking"}
                                }
                              ]
                            }
                          ],
                          "annotations": {"typeId": "ReconnectionStrategy"},
                          "type": "Union"
                        },
                        "key": {"name": "reconnectionStrategy"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnection",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Proxy",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The optional proxy host.",
                    "displayName": "Host"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyHost",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy port.",
                    "displayName": "Port"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyPort",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy username.",
                    "displayName": "Username"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyUsername",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy password.",
                    "displayName": "Password"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyPassword",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy domain.",
                    "displayName": "Domain"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyDomain",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The optional proxy workstation.",
                    "displayName": "Workstation"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "proxyWorkstation",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Proxy",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Advanced",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The URL to connect to in case an S3 compatible storage is used. If blank, the default AWS S3 one will be used.",
                    "displayName": "S3 Compatible Storage URL",
                    "example": "https://{s3-compatible-storage-host-name}:{port}"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "storageUrl",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Any bucket-related operations invoked against a client with this option enabled will potentially be executed against other regions than the one configured in the client in order to succeed.",
                    "displayName": "Force Global Bucket Access"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "forceGlobalBucketAccess",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        }
      ]
    }],
    "externalLibraries": [],
    "description": "",
    "resources": [],
    "subTypes": [],
    "modelProperties": {},
    "constructs": [],
    "connectionProviders": [],
    "version": "5.6.0",
    "privilegedArtifacts": [],
    "importedTypes": [
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.runtime.core.api.source.scheduler.Scheduler",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.runtime.core.api.source.scheduler.Scheduler",
          "typeAlias": {"value": "scheduling-strategy"}
        },
        "type": "Object",
        "fields": []
      },
      {
        "format": "java",
        "annotations": {
          "extensibleType": {},
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.runtime.api.store.ObjectStore",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.runtime.api.store.ObjectStore",
          "typeAlias": {"value": "ObjectStore"}
        },
        "type": "Object",
        "fields": []
      }
    ],
    "xmlDsl": {
      "schemaVersion": "5.6.0",
      "prefix": "s3",
      "schemaLocation": "http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd",
      "namespace": "http://www.mulesoft.org/schema/mule/s3",
      "xsdFileName": "mule-s3.xsd"
    },
    "operations": [],
    "vendor": "Mulesoft",
    "name": "Amazon S3",
    "privilegedPackages": [],
    "category": "SELECT",
    "notifications": [],
    "errors": [
      {
        "parent": "MULE:ANY",
        "error": "S3:CROSS_LOCATION_LOGGING_PROHIBITED",
        "handleable": true
      },
      {
        "error": "MULE:ANY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INTERNAL_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MALFORMED_POST_REQUEST",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MISSING_REQUEST_BODY_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MAX_MESSAGE_LENGTH_EXCEEDED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:TOO_MANY_BUCKETS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_LOCATION_CONSTRAINT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:REQUEST_TIMEOUT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MISSING_SECURITY_HEADER",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:KEY_TOO_LONG",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_PART",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_PAYER",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_PART_ORDER",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_SUCH_KEY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:TOKEN_REFRESH_REQUIRED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MISSING_CONTENT_LENGTH",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_SUCH_LIFECYCLE_CONFIGURATION",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_DIGEST",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:REQUEST_IS_NOT_MULTI_PART_CONTENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_BUCKET_NAME",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:ACCOUNT_PROBLEM",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MALFORMED_ACL_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:CREDENTIALS_NOT_SUPPORTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_SUCH_VERSION",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_BUCKET_STATE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_SUCH_BUCKET",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_SECURITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:RESTORE_ALREADY_IN_PROGRESS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:METHOD_NOT_ALLOWED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:PRECONDITION_FAILED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:BAD_DIGEST",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:SERVICE_UNAVAILABLE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:UNKNOWN",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:REQUEST_TIME_TOO_SKEWED",
        "handleable": true
      },
      {
        "parent": "MULE:RETRY_EXHAUSTED",
        "error": "S3:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:BUCKET_ALREADY_EXISTS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:TEMPORARY_REDIRECT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:SIGNATURE_DOES_NOT_MATCH",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:REQUEST_TORRENT_OF_BUCKET_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:BUCKET_ALREADY_OWNED_BY_YOU",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_ENCRYPTION_ALGORITHM_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_SOAP_REQUEST",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_ACCESS_KEY_ID",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NOT_IMPLEMENTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NOT_SIGNED_UP",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_RESPONSE_PRESIGNEDURL_MALFORMED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_LOGGING_STATUS_FOR_KEY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:BUCKET_NOT_EMPTY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:ENTITY_TOO_SMALL",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:PERMANENT_REDIRECT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:EXPIRED_TOKEN",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_TARGET_BUCKET_FOR_LOGGING",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:SLOW_DOWN",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:ACCESS_DENIED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INLINE_DATA_TOO_LARGE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_ARGUMENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:USER_KEY_MUST_BE_SPECIFIED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_RANGE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_SUCH_UPLOAD",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_STORAGE_CLASS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:ENTITY_TOO_LARGE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:METADATA_TOO_LARGE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MISSING_ATTACHMENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:OPERATION_ABORTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_OBJECT_STATE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_REQUEST",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_ADDRESSING_HEADER",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MISSING_SECURITY_ELEMENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_TOKEN",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_POLICY_DOCUMENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INVALID_URI",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:NO_SUCH_BUCKET_POLICY",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "S3:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:UNEXPECTED_CONTENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:REDIRECT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:INCOMPLETE_BODY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "S3:MALFORMED_XML",
        "handleable": true
      }
    ]
  }
}